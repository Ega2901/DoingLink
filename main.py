import asyncio
import os
from aiogram import Bot, Dispatcher
from config_reader import config
from handlers.handlers import *
from handlers.handlers import router
from redisdb import *
from scheldule import *
import aiocron
import random
import logging

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞

@aiocron.crontab("05 13 * * 2")
async def poll_daily_broadcast():
    await start_poll()
@aiocron.crontab("00 15 * * 3")
async def pair_daily_broadcast():
    await create_pairs()
@aiocron.crontab("25 14 * * 1-5")
async def schedule_daily_broadcast():
    await send_message_to_subscribers()
BOT_TOKEN = os.getenv("BOT_TOKEN")
logging.basicConfig(logging.DEBUG)
bot = Bot(token=BOT_TOKEN , parse_mode='HTML')
dp = Dispatcher()
dp.include_router(router)
# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–æ—É—Ç–µ—Ä–æ–≤ –ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É
# dp.include_router(questions.router)
# dp.include_router(different_types.router)
chat_id = 921953226 #–ª–∏—á–Ω—ã–π —á—á–∞—Ç —Å–æ –º–Ω–æ–π –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π
# –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –æ–ø—Ä–æ—Å–∞
async def start_poll():
    markup = ReplyKeyboardRemove()
    poll_text = "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç‚úåüèª, –≤ —ç—Ñ–∏—Ä–µ –Ω–∞—à–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ –Ω–∞—Ä–∞–±–æ—Ç–∫–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞!ü•≥ –ü—Ä–∏–º–µ—à—å —É—á–∞—Å—Ç–∏–µ –≤ –Ω–∞—à–µ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–µ –∂–∏–∑–Ω–∏? ‚ò∫Ô∏èüéâ(–î–æ—Å—Ä–æ—á–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ /pairs)"
    options = ["‚úÖ –î–∞", "‚ùå –ù–µ—Ç, –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑"]
    await bot.send_poll(
        chat_id=chat_id,
        question=poll_text,
        options=options,
        is_anonymous=False,  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–ø—Ä–æ—Å –∫–∞–∫ –Ω–µ–∞–Ω–æ–Ω–∏–º–Ω—ã–π
        reply_markup=markup
    )
async def send_message_to_subscribers():
    text = send_schedule()
    subscribers = await load_list_from_redis(redis_url, key = 'chats')
    for subscriber in subscribers:
        await bot.send_message(subscriber, text)
#—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–∞—Ä–∞–º –∏–ª–∏ —Ç—Ä–æ–π–∫–∞–º
async def create_pairs():
    yes_users = await load_dict_from_redis(redis_url, key = chat_id)
    if not yes_users:
        await bot.send_message(chat_id, "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤.")
        return
    poll_id = list(yes_users.keys())[-1]  # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–ø—Ä–æ—Å
    users = yes_users[poll_id]
    
    if len(users) < 2:
        await bot.send_message(chat_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ä.")
        return
    pair_text = f"–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –∑–∞ üßÄ –∏ üç∑ –≤—Å—Ç—Ä–µ—Ç—è—Ç—Å—è:\n\n"
    while len(users)>=2:
            pair = random.sample(users, 2)
            pair_text += f"‚Ä¢ {' –∏ '.join(['@' + username for username in pair])}\n"
            users = [user for user in users if user not in pair]
            if len(users) == 3:
                    triple = random.sample(users, 3)
                    pair_text += f"‚Ä¢ {' –∏ '.join(['@' + username for username in triple])}\n"
    pair_text += "\n–î–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å –æ–± —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –≤—Å—Ç—Ä–µ—á–∏ –∏ –Ω–∞–π–¥–∏—Ç–µ –æ—Ç–∫–ª–∏–∫ –≤ —Å–µ—Ä–¥—Ü–∞—Ö –¥—Ä—É–≥ –¥—Ä—É–≥–∞ ‚ù§Ô∏è!"
    pair_text += "\n\n[DOING LINK](MadeByZealot)"
    await bot.send_message(chat_id, pair_text)
    
# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –≤—Ö–æ–¥—è—â–∏–µ
# –î–∞, —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –¥–∞–∂–µ –µ—Å–ª–∏ —É –≤–∞—Å –ø–æ–ª–ª–∏–Ω–≥

dp.start_polling(bot)
    
if __name__ == "__main__":
    asyncio.run()