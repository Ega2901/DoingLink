from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, PollAnswer, ReplyKeyboardRemove
from redisdb import *
from scheldule import *

router = Router()  # [1]

chats = []
yes_users = {}


@router.message(Command("start"))  # [2]
async def cmd_start(message: Message):
    new_chat = message.chat.id
    chats.append(new_chat)
    await save_list_to_redis(redis_url, key = 'chats', my_list = chats)
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ DoingLink!üî•üî•üî•\n –Ø —É–º–µ—é –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–±—ã—Ç–∏—è –∏–∑ –≤–∞—à–µ–≥–æ Google Calendar üìÖ(/schedule(–Ω–∞ —Å–µ–≥–æ–¥–Ω—è), /mycal(–±–ª–∏–∂–∞–π—à–∏–µ 10))\n —Å–æ–∑–¥–∞–≤–∞—Ç—å RandomCoffee(/go) ‚òïÔ∏è , –∞ —Ç–∞–∫–∂–µ –ø–æ–∑–¥—Ä–∞–≤–ª—è—Ç—å —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è!ü•≥",
        reply_markup=get_yes_no_kb()
    )

@router.message(Command('myid'))
async def myid(message: Message):
    new_chat = message.chat.id
    await message.answer(new_chat)

@router.message(Command('mycal'))
async def mycal(message: Message):
    cal = get_schedule_data()
    await message.answer(f"–í–∞—à–∏ –±–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è:\n "f"{cal}")


@router.poll()
async def poll_answer(poll_answer: PollAnswer):
    user = poll_answer.User
    username = user.username
    poll_id = poll_answer.poll_id
    chat_id = poll_answer.chat.id
    key = chat_id
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–ø—Ä–æ—Å —Å —Ç–∞–∫–∏–º poll_id —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –æ—Ç–≤–µ—Ç "–î–∞"
    if  poll_answer.option_ids[0] == 0:
        yes_users[poll_id].append(username)
        await save_dict_to_redis(redis_url, key, yes_users)